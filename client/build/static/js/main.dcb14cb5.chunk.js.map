{"version":3,"sources":["assets/images/spinner.gif","redux/bigbasket/bigbasket.actions.js","redux/bigbasket/bigbasket.reducer.js","components/products/admin/ProductAdmin.js","components/products/create/CreateProduct.js","components/products/list/ProductList.js","components/products/update/UpdateProduct.js","components/home/Home.js","components/navbar/Navbar.js","redux/rootReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getAllProducts","dispatch","type","Axios","get","response","payload","data","products","updateFormInput","key","value","initialState","loading","selectedProduct","errorMessage","ProductAdmin","useDispatch","productsInfo","useSelector","state","useEffect","clickDeleteProduct","productId","dataURL","delete","deleteProduct","className","to","src","spinner","alt","length","map","product","_id","substr","image","width","height","name","price","toFixed","quantity","onClick","bind","colSpan","CreateProduct","history","useHistory","useState","info","setProduct","updateInput","e","target","updateImage","event","imageFile","files","convertBase64String","base64Image","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","addEventListener","result","onSubmit","preventDefault","post","push","createProduct","required","onChange","placeholder","id","htmlFor","rows","ProductList","UpdateProduct","productID","useParams","productInfo","Object","keys","put","updateProduct","Home","Navbar","rootReducer","combineReducers","action","middlewares","logger","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dcb14cb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.f4404720.gif\";","import Axios from \"axios\";\r\n\r\nexport const GET_ALL_PRODUCTS_REQUEST = \"GET_ALL_PRODUCTS_REQUEST\";\r\nexport const GET_ALL_PRODUCTS_SUCCESS = \"GET_ALL_PRODUCTS_SUCCESS\";\r\nexport const GET_ALL_PRODUCTS_FAILURE = \"GET_ALL_PRODUCTS_FAILURE\";\r\n\r\nexport const GET_PRODUCT_REQUEST = \"GET_PRODUCT_REQUEST\";\r\nexport const GET_PRODUCT_SUCCESS = \"GET_PRODUCT_SUCCESS\";\r\nexport const GET_PRODUCT_FAILURE = \"GET_PRODUCT_FAILURE\";\r\n\r\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\";\r\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\r\nexport const CREATE_PRODUCT_FAILURE = \"CREATE_PRODUCT_FAILURE\";\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\";\r\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\r\nexport const UPDATE_PRODUCT_FAILURE = \"UPDATE_PRODUCT_FAILURE\";\r\n\r\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\";\r\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\r\nexport const DELETE_PRODUCT_FAILURE = \"DELETE_PRODUCT_FAILURE\";\r\n\r\nexport const UPDATE_INPUT = \"UPDATE_INPUT\";\r\n\r\nexport const getAllProducts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GET_ALL_PRODUCTS_REQUEST });\r\n      let dataURL = `http://127.0.0.1:5000/api/products`;\r\n      let response = await Axios.get(dataURL);\r\n      dispatch({\r\n        type: GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: response.data.products,\r\n      });\r\n    } catch (err) {\r\n      dispatch({ type: GET_ALL_PRODUCTS_FAILURE, payload: err });\r\n    }\r\n  };\r\n};\r\nexport const createProduct = (product, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: CREATE_PRODUCT_REQUEST });\r\n      let dataURL = `http://127.0.0.1:5000/api/products`;\r\n      let response = await Axios.post(dataURL, product);\r\n      dispatch({ type: CREATE_PRODUCT_SUCCESS, payload: response.data });\r\n      history.push(\"/products/admin\");\r\n    } catch (err) {\r\n      dispatch({ type: CREATE_PRODUCT_FAILURE, payload: err });\r\n    }\r\n  };\r\n};\r\nexport const getProduct = (productId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GET_PRODUCT_REQUEST });\r\n      let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n      let response = await Axios.get(dataURL);\r\n      dispatch({ type: GET_PRODUCT_SUCCESS, payload: response.data.product });\r\n    } catch (err) {\r\n      dispatch({ type: GET_PRODUCT_FAILURE, payload: err });\r\n    }\r\n  };\r\n};\r\nexport const updateProduct = (productId, product, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n      let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n      let response = await Axios.put(dataURL, product);\r\n      dispatch({\r\n        type: UPDATE_PRODUCT_SUCCESS,\r\n        payload: response.data.product,\r\n      });\r\n      history.push(\"/products/admin\");\r\n    } catch (err) {\r\n      dispatch({ type: UPDATE_PRODUCT_FAILURE, payload: err });\r\n    }\r\n  };\r\n};\r\nexport const deleteProduct = (productId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n      let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n      let response = await Axios.delete(dataURL);\r\n      dispatch({ type: DELETE_PRODUCT_SUCCESS, payload: response.data });\r\n      dispatch(getAllProducts());\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PRODUCT_FAILURE, payload: err });\r\n    }\r\n  };\r\n};\r\nexport const updateFormInput = (key, value) => {\r\n  return {\r\n    type: UPDATE_INPUT,\r\n    payload: { key, value },\r\n  };\r\n};\r\n","import {\r\n  CREATE_PRODUCT_FAILURE,\r\n  CREATE_PRODUCT_REQUEST,\r\n  CREATE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAILURE,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  GET_ALL_PRODUCTS_FAILURE,\r\n  GET_ALL_PRODUCTS_REQUEST,\r\n  GET_ALL_PRODUCTS_SUCCESS,\r\n  GET_PRODUCT_FAILURE,\r\n  GET_PRODUCT_REQUEST,\r\n  GET_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAILURE,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_INPUT\r\n} from \"./bigbasket.actions\";\r\n\r\nexport const bigbasketFeatureKey = \"big-basket\";\r\n\r\nlet initialState = {\r\n  loading: false,\r\n  products: [],\r\n  selectedProduct: {},\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport const bigbasketReducer = (state = initialState, action) => {\r\n  let { type, payload } = action;\r\n  let { loading, products, selectedProduct, errorMessage } = state;\r\n  switch (type) {\r\n    case GET_ALL_PRODUCTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_ALL_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        products: payload,\r\n      };\r\n    case GET_ALL_PRODUCTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: payload,\r\n      };\r\n    case CREATE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case CREATE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    case CREATE_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: payload,\r\n      };\r\n    case GET_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        selectedProduct: payload\r\n      };\r\n    case GET_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: payload,\r\n      };\r\n    case UPDATE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case UPDATE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        // selectedProduct: payload\r\n      };\r\n    case UPDATE_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: payload,\r\n      };\r\n    case DELETE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        // selectedProduct: payload\r\n      };\r\n    case DELETE_PRODUCT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: payload,\r\n      };\r\n    case UPDATE_INPUT: \r\n      return {\r\n        ...state,\r\n        selectedProduct: {\r\n          ...selectedProduct,\r\n          [payload.key]: payload.value\r\n        }\r\n      }\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bigbasketFeatureKey } from \"../../../redux/bigbasket/bigbasket.reducer\";\r\nimport { deleteProduct, getAllProducts } from \"../../../redux/bigbasket/bigbasket.actions\";\r\nimport spinner from \"../../../assets/images/spinner.gif\";\r\n\r\nlet ProductAdmin = () => {\r\n  const dispatch = useDispatch();\r\n  const productsInfo = useSelector((state) => {\r\n    return state[bigbasketFeatureKey];\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n  }, []);\r\n\r\n  let { loading, products, errorMessage } = productsInfo;\r\n\r\n  let clickDeleteProduct = (productId) => {\r\n    dispatch(deleteProduct(productId));\r\n    /* let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n    Axios.delete(dataURL)\r\n      .then((response) => {\r\n        //getAllProducts();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      }); */\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"p-3\">\r\n        <div className=\"container\">\r\n          <div className=\"row animated zoomIn\">\r\n            <div className=\"col\">\r\n              <p className=\"h3 text-success\">Product Admin</p>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Animi\r\n                aspernatur beatae deserunt earum eius et fugiat hic, incidunt\r\n                inventore iusto molestiae odio omnis perferendis provident\r\n                quisquam sapiente soluta, sunt veniam!\r\n              </p>\r\n              <Link to=\"/products/create\" className=\"btn btn-success btn-sm\">\r\n                Create New\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {loading ? (\r\n        <img src={spinner} alt=\"\" className=\"d-block m-auto\" />\r\n      ) : (\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row animated zoomIn\">\r\n              <div className=\"col\">\r\n                <table className=\"table table-hover text-center table-striped table-success\">\r\n                  <thead className=\"bg-dark text-success\">\r\n                    <tr>\r\n                      <th>SNO</th>\r\n                      <th>Product</th>\r\n                      <th>Name</th>\r\n                      <th>Price</th>\r\n                      <th>Qty</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {products.length > 0 ? (\r\n                    <tbody>\r\n                      {products.map((product) => {\r\n                        return (\r\n                          <tr key={product._id}>\r\n                            <td>\r\n                              {product._id.substr(product._id.length - 5)}\r\n                            </td>\r\n                            <td>\r\n                              <img\r\n                                src={product.image}\r\n                                alt=\"\"\r\n                                width=\"50\"\r\n                                height=\"50\"\r\n                              />\r\n                            </td>\r\n                            <td>{product.name}</td>\r\n                            <td>&#8377; {product.price.toFixed(2)}</td>\r\n                            <td>{product.quantity} Kg</td>\r\n                            <td width=\"20%\">\r\n                              <Link\r\n                                to={`/products/${product._id}`}\r\n                                className=\"btn btn-secondary btn-sm\"\r\n                              >\r\n                                Update\r\n                              </Link>\r\n                              <button\r\n                                className=\"btn btn-danger btn-sm\"\r\n                                onClick={clickDeleteProduct.bind(\r\n                                  this,\r\n                                  product._id\r\n                                )}\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  ) : (\r\n                    <tbody>\r\n                      <tr>\r\n                        <td colSpan=\"6\" className=\"text-danger\">\r\n                          ------ NO Products Found ---------\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  )}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProductAdmin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createProduct } from \"../../../redux/bigbasket/bigbasket.actions\";\r\n\r\nlet CreateProduct = () => {\r\n  let history = useHistory();\r\n  let dispatch = useDispatch();\r\n\r\n  let [product, setProduct] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    price: \"\",\r\n    quantity: \"\",\r\n    info: \"\",\r\n  });\r\n\r\n  let updateInput = (e) => {\r\n    setProduct({\r\n      ...product,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // updateImage\r\n  let updateImage = async (event) => {\r\n    let imageFile = event.target.files[0];\r\n    let base64Image = await convertBase64String(imageFile);\r\n    setProduct({\r\n      ...product,\r\n      image: base64Image,\r\n    });\r\n  };\r\n\r\n  let convertBase64String = (imageFile) => {\r\n    return new Promise((resolve, reject) => {\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsDataURL(imageFile);\r\n      fileReader.addEventListener(\"load\", () => {\r\n        if (fileReader.result) {\r\n          resolve(fileReader.result);\r\n        } else {\r\n          reject(\"Error Occurred\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  let submitCreateProduct = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProduct(product, history));\r\n  };\r\n  /* \r\n  useEffect(() => {\r\n      if(isSubmitted){\r\n          history.push(\"/products/admin\")\r\n      }\r\n  }, [isSubmitted]) */\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <section className=\"p-3\">\r\n          <div className=\"container\">\r\n            <div className=\"row animated zoomIn\">\r\n              <div className=\"col\">\r\n                <p className=\"h3 text-success\">Create a Product</p>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                  Consequuntur deserunt doloremque facilis laudantium minima nam\r\n                  sunt, veritatis. Accusamus, architecto consectetur doloremque\r\n                  ex facilis, numquam placeat, possimus repellendus soluta\r\n                  voluptate voluptatum.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/*      <pre>{JSON.stringify(product)}</pre>*/}\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row animated flipInX\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header bg-success text-white\">\r\n                    <p className=\"h4\">Create Product</p>\r\n                  </div>\r\n                  <div className=\"card-body rgba-green-light\">\r\n                    <form onSubmit={submitCreateProduct}>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          required\r\n                          name=\"name\"\r\n                          value={product.name}\r\n                          onChange={updateInput}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Name\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input\r\n                            required\r\n                            onChange={updateImage}\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"customFile\"\r\n                          />\r\n                          <label\r\n                            className=\"custom-file-label\"\r\n                            htmlFor=\"customFile\"\r\n                          >\r\n                            {product.image.length > 0 ? (\r\n                              <img\r\n                                src={product.image}\r\n                                alt=\"\"\r\n                                width=\"25\"\r\n                                height=\"25\"\r\n                              />\r\n                            ) : (\r\n                              \"Product Image\"\r\n                            )}\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          required\r\n                          name=\"price\"\r\n                          value={product.price}\r\n                          onChange={updateInput}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Price\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          required\r\n                          name=\"quantity\"\r\n                          value={product.quantity}\r\n                          onChange={updateInput}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Quantity\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <textarea\r\n                          required\r\n                          name=\"info\"\r\n                          value={product.info}\r\n                          onChange={updateInput}\r\n                          rows=\"3\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Info\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn btn-sm btn-success\"\r\n                          value=\"Create\"\r\n                        />\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    </>\r\n  );\r\n};\r\nexport default CreateProduct;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllProducts } from \"../../../redux/bigbasket/bigbasket.actions\";\r\nimport { bigbasketFeatureKey } from \"../../../redux/bigbasket/bigbasket.reducer\";\r\nimport spinner from \"../../../assets/images/spinner.gif\";\r\n\r\nlet ProductList = () => {\r\n  const dispatch = useDispatch();\r\n  const productsInfo = useSelector((state) => {\r\n    return state[bigbasketFeatureKey];\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n  }, []);\r\n\r\n  let { loading, products, errorMessage } = productsInfo;\r\n\r\n  return (\r\n    <>\r\n    {/* <pre>{products.length}</pre> */}\r\n      <section className=\"p-3\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col animated zoomIn\">\r\n              <p className=\"h3 text-success\">Product List</p>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                Aliquam cum magnam maxime? Ad aliquam aspernatur autem eligendi\r\n                error exercitationem impedit, ipsa laboriosam magnam nam\r\n                nesciunt quam quas. Culpa, error, libero.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {\r\n        loading ? <img src={spinner} alt=\"\" className=\"d-block m-auto\"/> : <section>\r\n        {products.length > 0 ? (\r\n          <>\r\n            <div className=\"container animated zoomIn\">\r\n              <div className=\"row\">\r\n                {products.map((product) => {\r\n                  return (\r\n                    <div className=\"col-md-3\" key={product._id}>\r\n                      <div className=\"card mt-3\">\r\n                        <div className=\"card-header text-center bg-white\">\r\n                          <img\r\n                            src={product.image}\r\n                            alt=\"\"\r\n                            width=\"150\"\r\n                            height=\"150\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                              NAME : {product.name}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                              Price : &#8377; {product.price.toFixed(2)}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                              Qty : {product.quantity} Kg\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <p className=\"h5 text-danger\">\r\n              ----------- NO Products Found --------\r\n            </p>\r\n          </>\r\n        )}\r\n      </section>\r\n      }\r\n      \r\n    </>\r\n  );\r\n};\r\nexport default ProductList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bigbasketFeatureKey } from \"../../../redux/bigbasket/bigbasket.reducer\";\r\nimport {\r\n  getProduct,\r\n  updateFormInput,\r\n  updateProduct,\r\n} from \"../../../redux/bigbasket/bigbasket.actions\";\r\n\r\nlet UpdateProduct = () => {\r\n  let history = useHistory();\r\n  let productID = useParams().productId;\r\n  let dispatch = useDispatch();\r\n  const productInfo = useSelector((state) => {\r\n    return state[bigbasketFeatureKey];\r\n  });\r\n  let { loading, products, selectedProduct, errorMessage } = productInfo;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(productID));\r\n  }, [productID]);\r\n\r\n  let updateInput = (event) => {\r\n    dispatch(updateFormInput(event.target.name, event.target.value));\r\n  };\r\n\r\n  // updateImage\r\n  let updateImage = async (event) => {\r\n    let { target } = event;\r\n    let imageFile = target.files[0];\r\n    let base64Image = await convertBase64String(imageFile);\r\n    dispatch(updateFormInput(target.name, base64Image));\r\n  };\r\n\r\n  let convertBase64String = (imageFile) => {\r\n    return new Promise((resolve, reject) => {\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsDataURL(imageFile);\r\n      fileReader.addEventListener(\"load\", () => {\r\n        if (fileReader.result) {\r\n          resolve(fileReader.result);\r\n        } else {\r\n          reject(\"Error Occurred\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  let submitUpdateProduct = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProduct(productID, selectedProduct, history));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"p-3\">\r\n        <div className=\"container\">\r\n          <div className=\"row animated zoomIn\">\r\n            <div className=\"col\">\r\n              <p className=\"h3 text-secondary\">Update selectedProduct</p>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                Doloremque expedita fuga itaque modi nostrum numquam quis\r\n                ratione repudiandae sint tempore. Alias dolor eaque error\r\n                expedita libero nobis possimus rerum totam.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* <pre>{JSON.stringify(selectedProduct)}</pre> */}\r\n      {Object.keys(selectedProduct).length > 0 && (\r\n        <section className=\"\">\r\n          <div className=\"container\">\r\n            <div className=\"row animated flipInX\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header bg-secondary text-white\">\r\n                    <p className=\"h4\">Update selectedProduct</p>\r\n                  </div>\r\n                  <div className=\"card-body rgba-purple-light\">\r\n                    <form onSubmit={submitUpdateProduct}>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          required\r\n                          name=\"name\"\r\n                          value={selectedProduct.name}\r\n                          onChange={updateInput}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Name\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <div className=\"custom-file\">\r\n                          <input\r\n                            name=\"image\"\r\n                            onChange={updateImage}\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"customFile\"\r\n                          />\r\n                          <label\r\n                            className=\"custom-file-label\"\r\n                            htmlFor=\"customFile\"\r\n                          >\r\n                            {selectedProduct.image != \"\" ? (\r\n                              <img\r\n                                src={selectedProduct.image}\r\n                                alt=\"\"\r\n                                width=\"25\"\r\n                                height=\"25\"\r\n                              />\r\n                            ) : (\r\n                              \"Product Image\"\r\n                            )}\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          required\r\n                          name=\"price\"\r\n                          value={selectedProduct.price}\r\n                          onChange={updateInput}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Price\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          required\r\n                          name=\"quantity\"\r\n                          value={selectedProduct.quantity}\r\n                          onChange={updateInput}\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Quantity\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <textarea\r\n                          required\r\n                          name=\"info\"\r\n                          value={selectedProduct.info}\r\n                          onChange={updateInput}\r\n                          rows=\"3\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Info\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn btn-sm btn-secondary\"\r\n                          value=\"Update\"\r\n                        />\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default UpdateProduct;\r\n","import React from 'react';\r\n\r\nlet Home = () => {\r\n    return (\r\n        <>\r\n            <div className=\"landing-page\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center text-center h-100\">\r\n                        <h5 className=\"display-4 animated zoomIn\">Shop Online Here</h5>\r\n                        <p className=\"lead px-4 animated zoomIn\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eligendi placeat, tempora. Accusantium debitis deleniti dolorem, ea facilis in maiores nesciunt nisi nostrum pariatur placeat quibusdam recusandae soluta ullam vitae voluptate?</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\nexport default Home;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nlet Navbar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-dark bg-success navbar-expand-sm\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <i className=\"fa fa-shopping-cart\"/> BigBasket</Link>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/products/list\" className=\"nav-link\">Products</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/products/admin\" className=\"nav-link\">Admin</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n};\r\nexport default Navbar;","import { combineReducers } from \"redux\";\r\nimport { bigbasketFeatureKey, bigbasketReducer } from \"./bigbasket/bigbasket.reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    [bigbasketFeatureKey]: bigbasketReducer\r\n});","import { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nconst middlewares = [logger, thunk];\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)))","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport ProductAdmin from \"./components/products/admin/ProductAdmin\";\nimport CreateProduct from \"./components/products/create/CreateProduct\";\nimport ProductList from \"./components/products/list/ProductList\";\nimport UpdateProduct from \"./components/products/update/UpdateProduct\";\nimport Home from \"./components/home/Home\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport \"./App.css\";\nimport { store } from \"./redux/store\";\n\nlet App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/products/list\" exact component={ProductList} />\n            <Route path=\"/products/admin\" exact component={ProductAdmin} />\n            <Route path=\"/products/create\" exact component={CreateProduct} />\n            <Route\n              path=\"/products/:productId\"\n              exact\n              component={UpdateProduct}\n            />\n          </Switch>\n        </Router>\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n    Bootstrap + MDBootstrap + FontAwesome + Custom Styles\n */\nimport '@fortawesome/fontawesome-free/css/fontawesome.css';\nimport 'mdbootstrap/css/bootstrap.css';\nimport 'mdbootstrap/css/mdb.css';\nimport './style.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\n// import { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n      <App/>\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}